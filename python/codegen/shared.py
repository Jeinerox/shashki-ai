import os
import subprocess

# Output directory
CPP_OUT_DIR = os.path.dirname(__file__) + "/../../src/generated"


def format_cc(file_cc):
    """Formats the given file with clang-format"""
    try:
        subprocess.call(["clang-format", "-i", file_cc])
    except FileNotFoundError:
        pass  # clang-format not on path, abandon
    else:
        print(f"Formatted generated code with clang-format")


# Look-up table for linear board indices relative to a given index
#
# _move_lookup[i] contains a 4-tuple with indices in directions NE, NW, SW, SE,
# respectively; e.g. _move_lookup[5][SW] == (8, 12) indicates that there's two cells to
# the lower left of cell 5
NE, NW, SW, SE = 0, 1, 2, 3
linear_index_lookup = (
    # NE, NW, SW, SE
    ((), (), (4,), (5, 9, 14, 18, 23, 27)),  # 0
    ((), (), (5, 8, 12), (6, 10, 15, 19)),  # 1
    ((), (), (6, 9, 13, 16, 20), (7, 11)),  # 2
    ((), (), (7, 10, 14, 17, 21, 24, 28), ()),  # 3
    ((0,), (), (), (8, 13, 17, 22, 26, 31)),  # 4
    ((1,), (0,), (8, 12), (9, 14, 18, 23, 27)),  # 5
    ((2,), (1,), (9, 13, 16, 20), (10, 15, 19)),  # 6
    ((3,), (2,), (10, 14, 17, 21, 24, 28), (11,)),  # 7
    ((5, 1), (4,), (12,), (13, 17, 22, 26, 31)),  # 8
    ((6, 2), (5, 0), (13, 16, 20), (14, 18, 23, 27)),  # 9
    ((7, 3), (6, 1), (14, 17, 21, 24, 28), (15, 19)),  # 10
    ((), (7, 2), (15, 18, 22, 25, 29), ()),  # 11
    ((8, 5, 1), (), (), (16, 21, 25, 30)),  # 12
    ((9, 6, 2), (8, 4), (16, 20), (17, 22, 26, 31)),  # 13
    ((10, 7, 3), (9, 5, 0), (17, 21, 24, 28), (18, 23, 27)),  # 14
    ((11,), (10, 6, 1), (18, 22, 25, 29), (19,)),  # 15
    ((13, 9, 6, 2), (12,), (20,), (21, 25, 30)),  # 16
    ((14, 10, 7, 3), (13, 8, 4), (21, 24, 28), (22, 26, 31)),  # 17
    ((15, 11), (14, 9, 5, 0), (22, 25, 29), (23, 27)),  # 18
    ((), (15, 10, 6, 1), (23, 26, 30), ()),  # 19
    ((16, 13, 9, 6, 2), (), (), (24, 29)),  # 20
    ((17, 14, 10, 7, 3), (16, 12), (24, 28), (25, 30)),  # 21
    ((18, 15, 11), (17, 13, 8, 4), (25, 29), (26, 31)),  # 22
    ((19,), (18, 14, 9, 5, 0), (26, 30), (27,)),  # 23
    ((21, 17, 14, 10, 7, 3), (20,), (28,), (29,)),  # 24
    ((22, 18, 15, 11), (21, 16, 12), (29,), (30,)),  # 25
    ((23, 19), (22, 17, 13, 8, 4), (30,), (31,)),  # 26
    ((), (23, 18, 14, 9, 5, 0), (31,), ()),  # 27
    ((24, 21, 17, 14, 10, 7, 3), (), (), ()),  # 28
    ((25, 22, 18, 15, 11), (24, 20), (), ()),  # 29
    ((26, 23, 19), (25, 21, 16, 12), (), ()),  # 30
    ((27,), (26, 22, 17, 13, 8, 4), (), ()),  # 31
)
